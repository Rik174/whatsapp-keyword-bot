import express from "express";
import qrcode from "qrcode";
import pkg from "whatsapp-web.js";   // <-- –Ω–æ–≤—ã–π –∏–º–ø–æ—Ä—Ç
const { Client, LocalAuth } = pkg;  // <-- –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è CommonJS

// --- HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è Render ---
const app = express();
app.get("/", (_, res) => res.send("‚úÖ WhatsApp Keyword Bot —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Render!"));
app.listen(process.env.PORT || 3000, () =>
  console.log("HTTP —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É", process.env.PORT || 3000)
);
// --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
const KEYWORDS = [
  "–æ—Å–≤–µ—â–µ–Ω–∏–µ", "–ø–æ–≤—ã—Å–∏—Ç—å", "—Å–¥–µ–ª–∞—Ç—å",
  "–∑–≤—É–∫", "—Å–≤–µ—Ç", "—è—Ä–∫–æ—Å—Ç—å", "–≥—Ä–æ–º–∫–æ—Å—Ç—å", "–∑–≤—É—á–∞–Ω–∏–µ",
  "–º–µ—Ä—Ü–∞–µ—Ç", "–Ω–µ –≥–æ—Ä–∏—Ç", "—Ç–∏—à–µ", "–≥—Ä–æ–º—á–µ", "—è—Ä—á–µ", "—Ç—É—Å–∫–ª–æ", "–ª–∞–º–ø–æ—á–∫–∏"
];
const TARGET_CONTACT = "971588479697@c.us";

// --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ ---
const client = new Client({
  authStrategy: new LocalAuth(), // —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–µ—Å—Å–∏—é (QR –Ω–µ –Ω—É–∂–Ω–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∂–¥—ã–π —Ä–∞–∑)
});
  puppeteer: {
    headless: true,
    args: [
      "--no-sandbox",
      "--disable-setuid-sandbox",
      "--disable-dev-shm-usage",
      "--disable-gpu",
      "--no-first-run",
      "--no-zygote",
      "--single-process",
    ],
  },
});
let lastQr = null;
// ‚Äî –ø–æ–ª—É—á–∞–µ–º QR –∏ –∑–∞–ø–æ–º–∏–Ω–∞–µ–º –µ–≥–æ ‚Äî
client.on("qr", (qr) => {
  lastQr = qr;
  console.log("QR –æ–±–Ω–æ–≤–ª—ë–Ω ‚Äî –æ—Ç–∫—Ä–æ–π /qr –∏ –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π");
});

// ‚Äî HTTP —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ QR ‚Äî
app.get("/qr", async (req, res) => {
  if (!lastQr) return res.status(404).send("QR –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤");
  try {
    const dataUrl = await qrcode.toDataURL(lastQr); // base64
    const img = Buffer.from(dataUrl.split(",")[1], "base64");
    res.set("Content-Type", "image/png");
    res.send(img);
  } catch (err) {
    console.error(err);
    res.status(500).send("–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR");
  }
});


client.on("ready", () => {
  console.log("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!");
});

// --- –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ ---
client.on("message", async (msg) => {
    try {
        const chat = await msg.getChat();
        if (chat.isGroup) {
            const text = msg.body.toLowerCase();
            const foundKeyword = KEYWORDS.find((kw) => text.includes(kw));
            if (foundKeyword) {
                console.log(`üöÄ –ù–∞–π–¥–µ–Ω–æ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ [${foundKeyword}] –≤ "${chat.name}"`);

                if (msg.hasMedia) {
                    const media = await msg.downloadMedia();
                    await client.sendMessage(
                        TARGET_CONTACT,
                        `üì© –°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –≥—Ä—É–ø–ø—ã "${chat.name}" —Å –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º "${foundKeyword}":\n\n${msg.body || ""}`,
                        { media }
                    );
                } else {
                    await client.sendMessage(
                        TARGET_CONTACT,
                        `üì© –°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –≥—Ä—É–ø–ø—ã "${chat.name}" —Å –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º "${foundKeyword}":\n\n${msg.body}`
                    );
                }
            }
        }
    } catch (error) {
        console.error("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
    }
});

client.initialize();
